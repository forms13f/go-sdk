/*
SEC form 13F API

API for SEC form filings such as 13F.

API version: 1.0.0
Contact: forms13f@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package forms13f

import (
	"encoding/json"
)

// checks if the ApiV1FormEntry type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiV1FormEntry{}

// ApiV1FormEntry struct for ApiV1FormEntry
type ApiV1FormEntry struct {
	// The accession number of the form entry.
	AccessionNumber *string `json:"accession_number,omitempty"`
	// The Central Index Key (CIK) of the form entry.
	Cik *string `json:"cik,omitempty"`
	// The name of the issuer.
	NameOfIssuer *string `json:"name_of_issuer,omitempty"`
	// The title of the class of securities.
	TitleOfClass *string `json:"title_of_class,omitempty"`
	// The CUSIP number of the securities.
	Cusip *string `json:"cusip,omitempty"`
	// The value of the securities.
	Value NullableInt64 `json:"value,omitempty"`
	// The number of shares or principal amount.
	SshPrnamt NullableInt64 `json:"ssh_prnamt,omitempty"`
	// The type of shares or principal amount.
	SshPrnamtType NullableString `json:"ssh_prnamt_type,omitempty"`
	// The investment discretion.
	InvestmentDiscretion NullableString `json:"investment_discretion,omitempty"`
	// The sole voting authority.
	VotingAuthoritySole NullableInt64 `json:"voting_authority_sole,omitempty"`
	// The shared voting authority.
	VotingAuthorityShared NullableInt64 `json:"voting_authority_shared,omitempty"`
	// The no voting authority.
	VotingAuthorityNone NullableInt64 `json:"voting_authority_none,omitempty"`
}

// NewApiV1FormEntry instantiates a new ApiV1FormEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiV1FormEntry() *ApiV1FormEntry {
	this := ApiV1FormEntry{}
	return &this
}

// NewApiV1FormEntryWithDefaults instantiates a new ApiV1FormEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiV1FormEntryWithDefaults() *ApiV1FormEntry {
	this := ApiV1FormEntry{}
	return &this
}

// GetAccessionNumber returns the AccessionNumber field value if set, zero value otherwise.
func (o *ApiV1FormEntry) GetAccessionNumber() string {
	if o == nil || IsNil(o.AccessionNumber) {
		var ret string
		return ret
	}
	return *o.AccessionNumber
}

// GetAccessionNumberOk returns a tuple with the AccessionNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1FormEntry) GetAccessionNumberOk() (*string, bool) {
	if o == nil || IsNil(o.AccessionNumber) {
		return nil, false
	}
	return o.AccessionNumber, true
}

// HasAccessionNumber returns a boolean if a field has been set.
func (o *ApiV1FormEntry) HasAccessionNumber() bool {
	if o != nil && !IsNil(o.AccessionNumber) {
		return true
	}

	return false
}

// SetAccessionNumber gets a reference to the given string and assigns it to the AccessionNumber field.
func (o *ApiV1FormEntry) SetAccessionNumber(v string) {
	o.AccessionNumber = &v
}

// GetCik returns the Cik field value if set, zero value otherwise.
func (o *ApiV1FormEntry) GetCik() string {
	if o == nil || IsNil(o.Cik) {
		var ret string
		return ret
	}
	return *o.Cik
}

// GetCikOk returns a tuple with the Cik field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1FormEntry) GetCikOk() (*string, bool) {
	if o == nil || IsNil(o.Cik) {
		return nil, false
	}
	return o.Cik, true
}

// HasCik returns a boolean if a field has been set.
func (o *ApiV1FormEntry) HasCik() bool {
	if o != nil && !IsNil(o.Cik) {
		return true
	}

	return false
}

// SetCik gets a reference to the given string and assigns it to the Cik field.
func (o *ApiV1FormEntry) SetCik(v string) {
	o.Cik = &v
}

// GetNameOfIssuer returns the NameOfIssuer field value if set, zero value otherwise.
func (o *ApiV1FormEntry) GetNameOfIssuer() string {
	if o == nil || IsNil(o.NameOfIssuer) {
		var ret string
		return ret
	}
	return *o.NameOfIssuer
}

// GetNameOfIssuerOk returns a tuple with the NameOfIssuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1FormEntry) GetNameOfIssuerOk() (*string, bool) {
	if o == nil || IsNil(o.NameOfIssuer) {
		return nil, false
	}
	return o.NameOfIssuer, true
}

// HasNameOfIssuer returns a boolean if a field has been set.
func (o *ApiV1FormEntry) HasNameOfIssuer() bool {
	if o != nil && !IsNil(o.NameOfIssuer) {
		return true
	}

	return false
}

// SetNameOfIssuer gets a reference to the given string and assigns it to the NameOfIssuer field.
func (o *ApiV1FormEntry) SetNameOfIssuer(v string) {
	o.NameOfIssuer = &v
}

// GetTitleOfClass returns the TitleOfClass field value if set, zero value otherwise.
func (o *ApiV1FormEntry) GetTitleOfClass() string {
	if o == nil || IsNil(o.TitleOfClass) {
		var ret string
		return ret
	}
	return *o.TitleOfClass
}

// GetTitleOfClassOk returns a tuple with the TitleOfClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1FormEntry) GetTitleOfClassOk() (*string, bool) {
	if o == nil || IsNil(o.TitleOfClass) {
		return nil, false
	}
	return o.TitleOfClass, true
}

// HasTitleOfClass returns a boolean if a field has been set.
func (o *ApiV1FormEntry) HasTitleOfClass() bool {
	if o != nil && !IsNil(o.TitleOfClass) {
		return true
	}

	return false
}

// SetTitleOfClass gets a reference to the given string and assigns it to the TitleOfClass field.
func (o *ApiV1FormEntry) SetTitleOfClass(v string) {
	o.TitleOfClass = &v
}

// GetCusip returns the Cusip field value if set, zero value otherwise.
func (o *ApiV1FormEntry) GetCusip() string {
	if o == nil || IsNil(o.Cusip) {
		var ret string
		return ret
	}
	return *o.Cusip
}

// GetCusipOk returns a tuple with the Cusip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1FormEntry) GetCusipOk() (*string, bool) {
	if o == nil || IsNil(o.Cusip) {
		return nil, false
	}
	return o.Cusip, true
}

// HasCusip returns a boolean if a field has been set.
func (o *ApiV1FormEntry) HasCusip() bool {
	if o != nil && !IsNil(o.Cusip) {
		return true
	}

	return false
}

// SetCusip gets a reference to the given string and assigns it to the Cusip field.
func (o *ApiV1FormEntry) SetCusip(v string) {
	o.Cusip = &v
}

// GetValue returns the Value field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV1FormEntry) GetValue() int64 {
	if o == nil || IsNil(o.Value.Get()) {
		var ret int64
		return ret
	}
	return *o.Value.Get()
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV1FormEntry) GetValueOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Value.Get(), o.Value.IsSet()
}

// HasValue returns a boolean if a field has been set.
func (o *ApiV1FormEntry) HasValue() bool {
	if o != nil && o.Value.IsSet() {
		return true
	}

	return false
}

// SetValue gets a reference to the given NullableInt64 and assigns it to the Value field.
func (o *ApiV1FormEntry) SetValue(v int64) {
	o.Value.Set(&v)
}
// SetValueNil sets the value for Value to be an explicit nil
func (o *ApiV1FormEntry) SetValueNil() {
	o.Value.Set(nil)
}

// UnsetValue ensures that no value is present for Value, not even an explicit nil
func (o *ApiV1FormEntry) UnsetValue() {
	o.Value.Unset()
}

// GetSshPrnamt returns the SshPrnamt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV1FormEntry) GetSshPrnamt() int64 {
	if o == nil || IsNil(o.SshPrnamt.Get()) {
		var ret int64
		return ret
	}
	return *o.SshPrnamt.Get()
}

// GetSshPrnamtOk returns a tuple with the SshPrnamt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV1FormEntry) GetSshPrnamtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.SshPrnamt.Get(), o.SshPrnamt.IsSet()
}

// HasSshPrnamt returns a boolean if a field has been set.
func (o *ApiV1FormEntry) HasSshPrnamt() bool {
	if o != nil && o.SshPrnamt.IsSet() {
		return true
	}

	return false
}

// SetSshPrnamt gets a reference to the given NullableInt64 and assigns it to the SshPrnamt field.
func (o *ApiV1FormEntry) SetSshPrnamt(v int64) {
	o.SshPrnamt.Set(&v)
}
// SetSshPrnamtNil sets the value for SshPrnamt to be an explicit nil
func (o *ApiV1FormEntry) SetSshPrnamtNil() {
	o.SshPrnamt.Set(nil)
}

// UnsetSshPrnamt ensures that no value is present for SshPrnamt, not even an explicit nil
func (o *ApiV1FormEntry) UnsetSshPrnamt() {
	o.SshPrnamt.Unset()
}

// GetSshPrnamtType returns the SshPrnamtType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV1FormEntry) GetSshPrnamtType() string {
	if o == nil || IsNil(o.SshPrnamtType.Get()) {
		var ret string
		return ret
	}
	return *o.SshPrnamtType.Get()
}

// GetSshPrnamtTypeOk returns a tuple with the SshPrnamtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV1FormEntry) GetSshPrnamtTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SshPrnamtType.Get(), o.SshPrnamtType.IsSet()
}

// HasSshPrnamtType returns a boolean if a field has been set.
func (o *ApiV1FormEntry) HasSshPrnamtType() bool {
	if o != nil && o.SshPrnamtType.IsSet() {
		return true
	}

	return false
}

// SetSshPrnamtType gets a reference to the given NullableString and assigns it to the SshPrnamtType field.
func (o *ApiV1FormEntry) SetSshPrnamtType(v string) {
	o.SshPrnamtType.Set(&v)
}
// SetSshPrnamtTypeNil sets the value for SshPrnamtType to be an explicit nil
func (o *ApiV1FormEntry) SetSshPrnamtTypeNil() {
	o.SshPrnamtType.Set(nil)
}

// UnsetSshPrnamtType ensures that no value is present for SshPrnamtType, not even an explicit nil
func (o *ApiV1FormEntry) UnsetSshPrnamtType() {
	o.SshPrnamtType.Unset()
}

// GetInvestmentDiscretion returns the InvestmentDiscretion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV1FormEntry) GetInvestmentDiscretion() string {
	if o == nil || IsNil(o.InvestmentDiscretion.Get()) {
		var ret string
		return ret
	}
	return *o.InvestmentDiscretion.Get()
}

// GetInvestmentDiscretionOk returns a tuple with the InvestmentDiscretion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV1FormEntry) GetInvestmentDiscretionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InvestmentDiscretion.Get(), o.InvestmentDiscretion.IsSet()
}

// HasInvestmentDiscretion returns a boolean if a field has been set.
func (o *ApiV1FormEntry) HasInvestmentDiscretion() bool {
	if o != nil && o.InvestmentDiscretion.IsSet() {
		return true
	}

	return false
}

// SetInvestmentDiscretion gets a reference to the given NullableString and assigns it to the InvestmentDiscretion field.
func (o *ApiV1FormEntry) SetInvestmentDiscretion(v string) {
	o.InvestmentDiscretion.Set(&v)
}
// SetInvestmentDiscretionNil sets the value for InvestmentDiscretion to be an explicit nil
func (o *ApiV1FormEntry) SetInvestmentDiscretionNil() {
	o.InvestmentDiscretion.Set(nil)
}

// UnsetInvestmentDiscretion ensures that no value is present for InvestmentDiscretion, not even an explicit nil
func (o *ApiV1FormEntry) UnsetInvestmentDiscretion() {
	o.InvestmentDiscretion.Unset()
}

// GetVotingAuthoritySole returns the VotingAuthoritySole field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV1FormEntry) GetVotingAuthoritySole() int64 {
	if o == nil || IsNil(o.VotingAuthoritySole.Get()) {
		var ret int64
		return ret
	}
	return *o.VotingAuthoritySole.Get()
}

// GetVotingAuthoritySoleOk returns a tuple with the VotingAuthoritySole field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV1FormEntry) GetVotingAuthoritySoleOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.VotingAuthoritySole.Get(), o.VotingAuthoritySole.IsSet()
}

// HasVotingAuthoritySole returns a boolean if a field has been set.
func (o *ApiV1FormEntry) HasVotingAuthoritySole() bool {
	if o != nil && o.VotingAuthoritySole.IsSet() {
		return true
	}

	return false
}

// SetVotingAuthoritySole gets a reference to the given NullableInt64 and assigns it to the VotingAuthoritySole field.
func (o *ApiV1FormEntry) SetVotingAuthoritySole(v int64) {
	o.VotingAuthoritySole.Set(&v)
}
// SetVotingAuthoritySoleNil sets the value for VotingAuthoritySole to be an explicit nil
func (o *ApiV1FormEntry) SetVotingAuthoritySoleNil() {
	o.VotingAuthoritySole.Set(nil)
}

// UnsetVotingAuthoritySole ensures that no value is present for VotingAuthoritySole, not even an explicit nil
func (o *ApiV1FormEntry) UnsetVotingAuthoritySole() {
	o.VotingAuthoritySole.Unset()
}

// GetVotingAuthorityShared returns the VotingAuthorityShared field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV1FormEntry) GetVotingAuthorityShared() int64 {
	if o == nil || IsNil(o.VotingAuthorityShared.Get()) {
		var ret int64
		return ret
	}
	return *o.VotingAuthorityShared.Get()
}

// GetVotingAuthoritySharedOk returns a tuple with the VotingAuthorityShared field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV1FormEntry) GetVotingAuthoritySharedOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.VotingAuthorityShared.Get(), o.VotingAuthorityShared.IsSet()
}

// HasVotingAuthorityShared returns a boolean if a field has been set.
func (o *ApiV1FormEntry) HasVotingAuthorityShared() bool {
	if o != nil && o.VotingAuthorityShared.IsSet() {
		return true
	}

	return false
}

// SetVotingAuthorityShared gets a reference to the given NullableInt64 and assigns it to the VotingAuthorityShared field.
func (o *ApiV1FormEntry) SetVotingAuthorityShared(v int64) {
	o.VotingAuthorityShared.Set(&v)
}
// SetVotingAuthoritySharedNil sets the value for VotingAuthorityShared to be an explicit nil
func (o *ApiV1FormEntry) SetVotingAuthoritySharedNil() {
	o.VotingAuthorityShared.Set(nil)
}

// UnsetVotingAuthorityShared ensures that no value is present for VotingAuthorityShared, not even an explicit nil
func (o *ApiV1FormEntry) UnsetVotingAuthorityShared() {
	o.VotingAuthorityShared.Unset()
}

// GetVotingAuthorityNone returns the VotingAuthorityNone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV1FormEntry) GetVotingAuthorityNone() int64 {
	if o == nil || IsNil(o.VotingAuthorityNone.Get()) {
		var ret int64
		return ret
	}
	return *o.VotingAuthorityNone.Get()
}

// GetVotingAuthorityNoneOk returns a tuple with the VotingAuthorityNone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV1FormEntry) GetVotingAuthorityNoneOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.VotingAuthorityNone.Get(), o.VotingAuthorityNone.IsSet()
}

// HasVotingAuthorityNone returns a boolean if a field has been set.
func (o *ApiV1FormEntry) HasVotingAuthorityNone() bool {
	if o != nil && o.VotingAuthorityNone.IsSet() {
		return true
	}

	return false
}

// SetVotingAuthorityNone gets a reference to the given NullableInt64 and assigns it to the VotingAuthorityNone field.
func (o *ApiV1FormEntry) SetVotingAuthorityNone(v int64) {
	o.VotingAuthorityNone.Set(&v)
}
// SetVotingAuthorityNoneNil sets the value for VotingAuthorityNone to be an explicit nil
func (o *ApiV1FormEntry) SetVotingAuthorityNoneNil() {
	o.VotingAuthorityNone.Set(nil)
}

// UnsetVotingAuthorityNone ensures that no value is present for VotingAuthorityNone, not even an explicit nil
func (o *ApiV1FormEntry) UnsetVotingAuthorityNone() {
	o.VotingAuthorityNone.Unset()
}

func (o ApiV1FormEntry) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiV1FormEntry) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessionNumber) {
		toSerialize["accession_number"] = o.AccessionNumber
	}
	if !IsNil(o.Cik) {
		toSerialize["cik"] = o.Cik
	}
	if !IsNil(o.NameOfIssuer) {
		toSerialize["name_of_issuer"] = o.NameOfIssuer
	}
	if !IsNil(o.TitleOfClass) {
		toSerialize["title_of_class"] = o.TitleOfClass
	}
	if !IsNil(o.Cusip) {
		toSerialize["cusip"] = o.Cusip
	}
	if o.Value.IsSet() {
		toSerialize["value"] = o.Value.Get()
	}
	if o.SshPrnamt.IsSet() {
		toSerialize["ssh_prnamt"] = o.SshPrnamt.Get()
	}
	if o.SshPrnamtType.IsSet() {
		toSerialize["ssh_prnamt_type"] = o.SshPrnamtType.Get()
	}
	if o.InvestmentDiscretion.IsSet() {
		toSerialize["investment_discretion"] = o.InvestmentDiscretion.Get()
	}
	if o.VotingAuthoritySole.IsSet() {
		toSerialize["voting_authority_sole"] = o.VotingAuthoritySole.Get()
	}
	if o.VotingAuthorityShared.IsSet() {
		toSerialize["voting_authority_shared"] = o.VotingAuthorityShared.Get()
	}
	if o.VotingAuthorityNone.IsSet() {
		toSerialize["voting_authority_none"] = o.VotingAuthorityNone.Get()
	}
	return toSerialize, nil
}

type NullableApiV1FormEntry struct {
	value *ApiV1FormEntry
	isSet bool
}

func (v NullableApiV1FormEntry) Get() *ApiV1FormEntry {
	return v.value
}

func (v *NullableApiV1FormEntry) Set(val *ApiV1FormEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableApiV1FormEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableApiV1FormEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiV1FormEntry(val *ApiV1FormEntry) *NullableApiV1FormEntry {
	return &NullableApiV1FormEntry{value: val, isSet: true}
}

func (v NullableApiV1FormEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiV1FormEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


