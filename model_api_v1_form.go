/*
SEC form 13F API

API for SEC form filings such as 13F.

API version: 1.0.0
Contact: forms13f@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package forms13f

import (
	"encoding/json"
)

// checks if the ApiV1Form type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiV1Form{}

// ApiV1Form struct for ApiV1Form
type ApiV1Form struct {
	// The URL of the form.
	Url *string `json:"url,omitempty"`
	// The accession number of the form.
	AccessionNumber *string `json:"accession_number,omitempty"`
	// The submission type of the form.
	SubmissionType *string `json:"submission_type,omitempty"`
	// The public document count.
	PublicDocumentCount NullableInt32 `json:"public_document_count,omitempty"`
	// The period of the report.
	PeriodOfReport *string `json:"period_of_report,omitempty"`
	// The filed as of date.
	FiledAsOfDate *string `json:"filed_as_of_date,omitempty"`
	// The date as of change.
	DateAsOfChange *string `json:"date_as_of_change,omitempty"`
	// The effectiveness date.
	EffectivenessDate *string `json:"effectiveness_date,omitempty"`
	// The Central Index Key (CIK).
	Cik *string `json:"cik,omitempty"`
	// The company name.
	CompanyName *string `json:"company_name,omitempty"`
	// The IRS number.
	IrsNumber *string `json:"irs_number,omitempty"`
	// The state of incorporation.
	StateOfIncorporation *string `json:"state_of_incorporation,omitempty"`
	// The fiscal year end.
	FiscalYearEnd *string `json:"fiscal_year_end,omitempty"`
	// The form type.
	FormType *string `json:"form_type,omitempty"`
	// The SEC act.
	SecAct *string `json:"sec_act,omitempty"`
	// The SEC file number.
	SecFileNumber *string `json:"sec_file_number,omitempty"`
	// The film number.
	FilmNumber *string `json:"film_number,omitempty"`
	// The business address.
	BusinessAddress NullableString `json:"business_address,omitempty"`
	// The business phone.
	BusinessPhone NullableString `json:"business_phone,omitempty"`
	// The total value of the table.
	TableValueTotal NullableInt64 `json:"table_value_total,omitempty"`
	// The total entry count of the table.
	TableEntryTotal NullableInt64 `json:"table_entry_total,omitempty"`
	// Indicates if the form is an amendment.
	IsAmendment *bool `json:"is_amendment,omitempty"`
	// The type of amendment.
	AmendmentType *string `json:"amendment_type,omitempty"`
	// Indicates if the confidentiality request was denied or expired.
	ConfDeniedExpired *bool `json:"conf_denied_expired,omitempty"`
	// The date when the confidentiality request was denied or expired.
	ConfDateDeniedExpired *string `json:"conf_date_denied_expired,omitempty"`
	// The date when the amendment was reported.
	AmendmentDateReported *string `json:"amendment_date_reported,omitempty"`
}

// NewApiV1Form instantiates a new ApiV1Form object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiV1Form() *ApiV1Form {
	this := ApiV1Form{}
	return &this
}

// NewApiV1FormWithDefaults instantiates a new ApiV1Form object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiV1FormWithDefaults() *ApiV1Form {
	this := ApiV1Form{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ApiV1Form) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1Form) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ApiV1Form) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ApiV1Form) SetUrl(v string) {
	o.Url = &v
}

// GetAccessionNumber returns the AccessionNumber field value if set, zero value otherwise.
func (o *ApiV1Form) GetAccessionNumber() string {
	if o == nil || IsNil(o.AccessionNumber) {
		var ret string
		return ret
	}
	return *o.AccessionNumber
}

// GetAccessionNumberOk returns a tuple with the AccessionNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1Form) GetAccessionNumberOk() (*string, bool) {
	if o == nil || IsNil(o.AccessionNumber) {
		return nil, false
	}
	return o.AccessionNumber, true
}

// HasAccessionNumber returns a boolean if a field has been set.
func (o *ApiV1Form) HasAccessionNumber() bool {
	if o != nil && !IsNil(o.AccessionNumber) {
		return true
	}

	return false
}

// SetAccessionNumber gets a reference to the given string and assigns it to the AccessionNumber field.
func (o *ApiV1Form) SetAccessionNumber(v string) {
	o.AccessionNumber = &v
}

// GetSubmissionType returns the SubmissionType field value if set, zero value otherwise.
func (o *ApiV1Form) GetSubmissionType() string {
	if o == nil || IsNil(o.SubmissionType) {
		var ret string
		return ret
	}
	return *o.SubmissionType
}

// GetSubmissionTypeOk returns a tuple with the SubmissionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1Form) GetSubmissionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SubmissionType) {
		return nil, false
	}
	return o.SubmissionType, true
}

// HasSubmissionType returns a boolean if a field has been set.
func (o *ApiV1Form) HasSubmissionType() bool {
	if o != nil && !IsNil(o.SubmissionType) {
		return true
	}

	return false
}

// SetSubmissionType gets a reference to the given string and assigns it to the SubmissionType field.
func (o *ApiV1Form) SetSubmissionType(v string) {
	o.SubmissionType = &v
}

// GetPublicDocumentCount returns the PublicDocumentCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV1Form) GetPublicDocumentCount() int32 {
	if o == nil || IsNil(o.PublicDocumentCount.Get()) {
		var ret int32
		return ret
	}
	return *o.PublicDocumentCount.Get()
}

// GetPublicDocumentCountOk returns a tuple with the PublicDocumentCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV1Form) GetPublicDocumentCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PublicDocumentCount.Get(), o.PublicDocumentCount.IsSet()
}

// HasPublicDocumentCount returns a boolean if a field has been set.
func (o *ApiV1Form) HasPublicDocumentCount() bool {
	if o != nil && o.PublicDocumentCount.IsSet() {
		return true
	}

	return false
}

// SetPublicDocumentCount gets a reference to the given NullableInt32 and assigns it to the PublicDocumentCount field.
func (o *ApiV1Form) SetPublicDocumentCount(v int32) {
	o.PublicDocumentCount.Set(&v)
}
// SetPublicDocumentCountNil sets the value for PublicDocumentCount to be an explicit nil
func (o *ApiV1Form) SetPublicDocumentCountNil() {
	o.PublicDocumentCount.Set(nil)
}

// UnsetPublicDocumentCount ensures that no value is present for PublicDocumentCount, not even an explicit nil
func (o *ApiV1Form) UnsetPublicDocumentCount() {
	o.PublicDocumentCount.Unset()
}

// GetPeriodOfReport returns the PeriodOfReport field value if set, zero value otherwise.
func (o *ApiV1Form) GetPeriodOfReport() string {
	if o == nil || IsNil(o.PeriodOfReport) {
		var ret string
		return ret
	}
	return *o.PeriodOfReport
}

// GetPeriodOfReportOk returns a tuple with the PeriodOfReport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1Form) GetPeriodOfReportOk() (*string, bool) {
	if o == nil || IsNil(o.PeriodOfReport) {
		return nil, false
	}
	return o.PeriodOfReport, true
}

// HasPeriodOfReport returns a boolean if a field has been set.
func (o *ApiV1Form) HasPeriodOfReport() bool {
	if o != nil && !IsNil(o.PeriodOfReport) {
		return true
	}

	return false
}

// SetPeriodOfReport gets a reference to the given string and assigns it to the PeriodOfReport field.
func (o *ApiV1Form) SetPeriodOfReport(v string) {
	o.PeriodOfReport = &v
}

// GetFiledAsOfDate returns the FiledAsOfDate field value if set, zero value otherwise.
func (o *ApiV1Form) GetFiledAsOfDate() string {
	if o == nil || IsNil(o.FiledAsOfDate) {
		var ret string
		return ret
	}
	return *o.FiledAsOfDate
}

// GetFiledAsOfDateOk returns a tuple with the FiledAsOfDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1Form) GetFiledAsOfDateOk() (*string, bool) {
	if o == nil || IsNil(o.FiledAsOfDate) {
		return nil, false
	}
	return o.FiledAsOfDate, true
}

// HasFiledAsOfDate returns a boolean if a field has been set.
func (o *ApiV1Form) HasFiledAsOfDate() bool {
	if o != nil && !IsNil(o.FiledAsOfDate) {
		return true
	}

	return false
}

// SetFiledAsOfDate gets a reference to the given string and assigns it to the FiledAsOfDate field.
func (o *ApiV1Form) SetFiledAsOfDate(v string) {
	o.FiledAsOfDate = &v
}

// GetDateAsOfChange returns the DateAsOfChange field value if set, zero value otherwise.
func (o *ApiV1Form) GetDateAsOfChange() string {
	if o == nil || IsNil(o.DateAsOfChange) {
		var ret string
		return ret
	}
	return *o.DateAsOfChange
}

// GetDateAsOfChangeOk returns a tuple with the DateAsOfChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1Form) GetDateAsOfChangeOk() (*string, bool) {
	if o == nil || IsNil(o.DateAsOfChange) {
		return nil, false
	}
	return o.DateAsOfChange, true
}

// HasDateAsOfChange returns a boolean if a field has been set.
func (o *ApiV1Form) HasDateAsOfChange() bool {
	if o != nil && !IsNil(o.DateAsOfChange) {
		return true
	}

	return false
}

// SetDateAsOfChange gets a reference to the given string and assigns it to the DateAsOfChange field.
func (o *ApiV1Form) SetDateAsOfChange(v string) {
	o.DateAsOfChange = &v
}

// GetEffectivenessDate returns the EffectivenessDate field value if set, zero value otherwise.
func (o *ApiV1Form) GetEffectivenessDate() string {
	if o == nil || IsNil(o.EffectivenessDate) {
		var ret string
		return ret
	}
	return *o.EffectivenessDate
}

// GetEffectivenessDateOk returns a tuple with the EffectivenessDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1Form) GetEffectivenessDateOk() (*string, bool) {
	if o == nil || IsNil(o.EffectivenessDate) {
		return nil, false
	}
	return o.EffectivenessDate, true
}

// HasEffectivenessDate returns a boolean if a field has been set.
func (o *ApiV1Form) HasEffectivenessDate() bool {
	if o != nil && !IsNil(o.EffectivenessDate) {
		return true
	}

	return false
}

// SetEffectivenessDate gets a reference to the given string and assigns it to the EffectivenessDate field.
func (o *ApiV1Form) SetEffectivenessDate(v string) {
	o.EffectivenessDate = &v
}

// GetCik returns the Cik field value if set, zero value otherwise.
func (o *ApiV1Form) GetCik() string {
	if o == nil || IsNil(o.Cik) {
		var ret string
		return ret
	}
	return *o.Cik
}

// GetCikOk returns a tuple with the Cik field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1Form) GetCikOk() (*string, bool) {
	if o == nil || IsNil(o.Cik) {
		return nil, false
	}
	return o.Cik, true
}

// HasCik returns a boolean if a field has been set.
func (o *ApiV1Form) HasCik() bool {
	if o != nil && !IsNil(o.Cik) {
		return true
	}

	return false
}

// SetCik gets a reference to the given string and assigns it to the Cik field.
func (o *ApiV1Form) SetCik(v string) {
	o.Cik = &v
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *ApiV1Form) GetCompanyName() string {
	if o == nil || IsNil(o.CompanyName) {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1Form) GetCompanyNameOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyName) {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *ApiV1Form) HasCompanyName() bool {
	if o != nil && !IsNil(o.CompanyName) {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *ApiV1Form) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetIrsNumber returns the IrsNumber field value if set, zero value otherwise.
func (o *ApiV1Form) GetIrsNumber() string {
	if o == nil || IsNil(o.IrsNumber) {
		var ret string
		return ret
	}
	return *o.IrsNumber
}

// GetIrsNumberOk returns a tuple with the IrsNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1Form) GetIrsNumberOk() (*string, bool) {
	if o == nil || IsNil(o.IrsNumber) {
		return nil, false
	}
	return o.IrsNumber, true
}

// HasIrsNumber returns a boolean if a field has been set.
func (o *ApiV1Form) HasIrsNumber() bool {
	if o != nil && !IsNil(o.IrsNumber) {
		return true
	}

	return false
}

// SetIrsNumber gets a reference to the given string and assigns it to the IrsNumber field.
func (o *ApiV1Form) SetIrsNumber(v string) {
	o.IrsNumber = &v
}

// GetStateOfIncorporation returns the StateOfIncorporation field value if set, zero value otherwise.
func (o *ApiV1Form) GetStateOfIncorporation() string {
	if o == nil || IsNil(o.StateOfIncorporation) {
		var ret string
		return ret
	}
	return *o.StateOfIncorporation
}

// GetStateOfIncorporationOk returns a tuple with the StateOfIncorporation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1Form) GetStateOfIncorporationOk() (*string, bool) {
	if o == nil || IsNil(o.StateOfIncorporation) {
		return nil, false
	}
	return o.StateOfIncorporation, true
}

// HasStateOfIncorporation returns a boolean if a field has been set.
func (o *ApiV1Form) HasStateOfIncorporation() bool {
	if o != nil && !IsNil(o.StateOfIncorporation) {
		return true
	}

	return false
}

// SetStateOfIncorporation gets a reference to the given string and assigns it to the StateOfIncorporation field.
func (o *ApiV1Form) SetStateOfIncorporation(v string) {
	o.StateOfIncorporation = &v
}

// GetFiscalYearEnd returns the FiscalYearEnd field value if set, zero value otherwise.
func (o *ApiV1Form) GetFiscalYearEnd() string {
	if o == nil || IsNil(o.FiscalYearEnd) {
		var ret string
		return ret
	}
	return *o.FiscalYearEnd
}

// GetFiscalYearEndOk returns a tuple with the FiscalYearEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1Form) GetFiscalYearEndOk() (*string, bool) {
	if o == nil || IsNil(o.FiscalYearEnd) {
		return nil, false
	}
	return o.FiscalYearEnd, true
}

// HasFiscalYearEnd returns a boolean if a field has been set.
func (o *ApiV1Form) HasFiscalYearEnd() bool {
	if o != nil && !IsNil(o.FiscalYearEnd) {
		return true
	}

	return false
}

// SetFiscalYearEnd gets a reference to the given string and assigns it to the FiscalYearEnd field.
func (o *ApiV1Form) SetFiscalYearEnd(v string) {
	o.FiscalYearEnd = &v
}

// GetFormType returns the FormType field value if set, zero value otherwise.
func (o *ApiV1Form) GetFormType() string {
	if o == nil || IsNil(o.FormType) {
		var ret string
		return ret
	}
	return *o.FormType
}

// GetFormTypeOk returns a tuple with the FormType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1Form) GetFormTypeOk() (*string, bool) {
	if o == nil || IsNil(o.FormType) {
		return nil, false
	}
	return o.FormType, true
}

// HasFormType returns a boolean if a field has been set.
func (o *ApiV1Form) HasFormType() bool {
	if o != nil && !IsNil(o.FormType) {
		return true
	}

	return false
}

// SetFormType gets a reference to the given string and assigns it to the FormType field.
func (o *ApiV1Form) SetFormType(v string) {
	o.FormType = &v
}

// GetSecAct returns the SecAct field value if set, zero value otherwise.
func (o *ApiV1Form) GetSecAct() string {
	if o == nil || IsNil(o.SecAct) {
		var ret string
		return ret
	}
	return *o.SecAct
}

// GetSecActOk returns a tuple with the SecAct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1Form) GetSecActOk() (*string, bool) {
	if o == nil || IsNil(o.SecAct) {
		return nil, false
	}
	return o.SecAct, true
}

// HasSecAct returns a boolean if a field has been set.
func (o *ApiV1Form) HasSecAct() bool {
	if o != nil && !IsNil(o.SecAct) {
		return true
	}

	return false
}

// SetSecAct gets a reference to the given string and assigns it to the SecAct field.
func (o *ApiV1Form) SetSecAct(v string) {
	o.SecAct = &v
}

// GetSecFileNumber returns the SecFileNumber field value if set, zero value otherwise.
func (o *ApiV1Form) GetSecFileNumber() string {
	if o == nil || IsNil(o.SecFileNumber) {
		var ret string
		return ret
	}
	return *o.SecFileNumber
}

// GetSecFileNumberOk returns a tuple with the SecFileNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1Form) GetSecFileNumberOk() (*string, bool) {
	if o == nil || IsNil(o.SecFileNumber) {
		return nil, false
	}
	return o.SecFileNumber, true
}

// HasSecFileNumber returns a boolean if a field has been set.
func (o *ApiV1Form) HasSecFileNumber() bool {
	if o != nil && !IsNil(o.SecFileNumber) {
		return true
	}

	return false
}

// SetSecFileNumber gets a reference to the given string and assigns it to the SecFileNumber field.
func (o *ApiV1Form) SetSecFileNumber(v string) {
	o.SecFileNumber = &v
}

// GetFilmNumber returns the FilmNumber field value if set, zero value otherwise.
func (o *ApiV1Form) GetFilmNumber() string {
	if o == nil || IsNil(o.FilmNumber) {
		var ret string
		return ret
	}
	return *o.FilmNumber
}

// GetFilmNumberOk returns a tuple with the FilmNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1Form) GetFilmNumberOk() (*string, bool) {
	if o == nil || IsNil(o.FilmNumber) {
		return nil, false
	}
	return o.FilmNumber, true
}

// HasFilmNumber returns a boolean if a field has been set.
func (o *ApiV1Form) HasFilmNumber() bool {
	if o != nil && !IsNil(o.FilmNumber) {
		return true
	}

	return false
}

// SetFilmNumber gets a reference to the given string and assigns it to the FilmNumber field.
func (o *ApiV1Form) SetFilmNumber(v string) {
	o.FilmNumber = &v
}

// GetBusinessAddress returns the BusinessAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV1Form) GetBusinessAddress() string {
	if o == nil || IsNil(o.BusinessAddress.Get()) {
		var ret string
		return ret
	}
	return *o.BusinessAddress.Get()
}

// GetBusinessAddressOk returns a tuple with the BusinessAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV1Form) GetBusinessAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BusinessAddress.Get(), o.BusinessAddress.IsSet()
}

// HasBusinessAddress returns a boolean if a field has been set.
func (o *ApiV1Form) HasBusinessAddress() bool {
	if o != nil && o.BusinessAddress.IsSet() {
		return true
	}

	return false
}

// SetBusinessAddress gets a reference to the given NullableString and assigns it to the BusinessAddress field.
func (o *ApiV1Form) SetBusinessAddress(v string) {
	o.BusinessAddress.Set(&v)
}
// SetBusinessAddressNil sets the value for BusinessAddress to be an explicit nil
func (o *ApiV1Form) SetBusinessAddressNil() {
	o.BusinessAddress.Set(nil)
}

// UnsetBusinessAddress ensures that no value is present for BusinessAddress, not even an explicit nil
func (o *ApiV1Form) UnsetBusinessAddress() {
	o.BusinessAddress.Unset()
}

// GetBusinessPhone returns the BusinessPhone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV1Form) GetBusinessPhone() string {
	if o == nil || IsNil(o.BusinessPhone.Get()) {
		var ret string
		return ret
	}
	return *o.BusinessPhone.Get()
}

// GetBusinessPhoneOk returns a tuple with the BusinessPhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV1Form) GetBusinessPhoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BusinessPhone.Get(), o.BusinessPhone.IsSet()
}

// HasBusinessPhone returns a boolean if a field has been set.
func (o *ApiV1Form) HasBusinessPhone() bool {
	if o != nil && o.BusinessPhone.IsSet() {
		return true
	}

	return false
}

// SetBusinessPhone gets a reference to the given NullableString and assigns it to the BusinessPhone field.
func (o *ApiV1Form) SetBusinessPhone(v string) {
	o.BusinessPhone.Set(&v)
}
// SetBusinessPhoneNil sets the value for BusinessPhone to be an explicit nil
func (o *ApiV1Form) SetBusinessPhoneNil() {
	o.BusinessPhone.Set(nil)
}

// UnsetBusinessPhone ensures that no value is present for BusinessPhone, not even an explicit nil
func (o *ApiV1Form) UnsetBusinessPhone() {
	o.BusinessPhone.Unset()
}

// GetTableValueTotal returns the TableValueTotal field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV1Form) GetTableValueTotal() int64 {
	if o == nil || IsNil(o.TableValueTotal.Get()) {
		var ret int64
		return ret
	}
	return *o.TableValueTotal.Get()
}

// GetTableValueTotalOk returns a tuple with the TableValueTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV1Form) GetTableValueTotalOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.TableValueTotal.Get(), o.TableValueTotal.IsSet()
}

// HasTableValueTotal returns a boolean if a field has been set.
func (o *ApiV1Form) HasTableValueTotal() bool {
	if o != nil && o.TableValueTotal.IsSet() {
		return true
	}

	return false
}

// SetTableValueTotal gets a reference to the given NullableInt64 and assigns it to the TableValueTotal field.
func (o *ApiV1Form) SetTableValueTotal(v int64) {
	o.TableValueTotal.Set(&v)
}
// SetTableValueTotalNil sets the value for TableValueTotal to be an explicit nil
func (o *ApiV1Form) SetTableValueTotalNil() {
	o.TableValueTotal.Set(nil)
}

// UnsetTableValueTotal ensures that no value is present for TableValueTotal, not even an explicit nil
func (o *ApiV1Form) UnsetTableValueTotal() {
	o.TableValueTotal.Unset()
}

// GetTableEntryTotal returns the TableEntryTotal field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV1Form) GetTableEntryTotal() int64 {
	if o == nil || IsNil(o.TableEntryTotal.Get()) {
		var ret int64
		return ret
	}
	return *o.TableEntryTotal.Get()
}

// GetTableEntryTotalOk returns a tuple with the TableEntryTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV1Form) GetTableEntryTotalOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.TableEntryTotal.Get(), o.TableEntryTotal.IsSet()
}

// HasTableEntryTotal returns a boolean if a field has been set.
func (o *ApiV1Form) HasTableEntryTotal() bool {
	if o != nil && o.TableEntryTotal.IsSet() {
		return true
	}

	return false
}

// SetTableEntryTotal gets a reference to the given NullableInt64 and assigns it to the TableEntryTotal field.
func (o *ApiV1Form) SetTableEntryTotal(v int64) {
	o.TableEntryTotal.Set(&v)
}
// SetTableEntryTotalNil sets the value for TableEntryTotal to be an explicit nil
func (o *ApiV1Form) SetTableEntryTotalNil() {
	o.TableEntryTotal.Set(nil)
}

// UnsetTableEntryTotal ensures that no value is present for TableEntryTotal, not even an explicit nil
func (o *ApiV1Form) UnsetTableEntryTotal() {
	o.TableEntryTotal.Unset()
}

// GetIsAmendment returns the IsAmendment field value if set, zero value otherwise.
func (o *ApiV1Form) GetIsAmendment() bool {
	if o == nil || IsNil(o.IsAmendment) {
		var ret bool
		return ret
	}
	return *o.IsAmendment
}

// GetIsAmendmentOk returns a tuple with the IsAmendment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1Form) GetIsAmendmentOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAmendment) {
		return nil, false
	}
	return o.IsAmendment, true
}

// HasIsAmendment returns a boolean if a field has been set.
func (o *ApiV1Form) HasIsAmendment() bool {
	if o != nil && !IsNil(o.IsAmendment) {
		return true
	}

	return false
}

// SetIsAmendment gets a reference to the given bool and assigns it to the IsAmendment field.
func (o *ApiV1Form) SetIsAmendment(v bool) {
	o.IsAmendment = &v
}

// GetAmendmentType returns the AmendmentType field value if set, zero value otherwise.
func (o *ApiV1Form) GetAmendmentType() string {
	if o == nil || IsNil(o.AmendmentType) {
		var ret string
		return ret
	}
	return *o.AmendmentType
}

// GetAmendmentTypeOk returns a tuple with the AmendmentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1Form) GetAmendmentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AmendmentType) {
		return nil, false
	}
	return o.AmendmentType, true
}

// HasAmendmentType returns a boolean if a field has been set.
func (o *ApiV1Form) HasAmendmentType() bool {
	if o != nil && !IsNil(o.AmendmentType) {
		return true
	}

	return false
}

// SetAmendmentType gets a reference to the given string and assigns it to the AmendmentType field.
func (o *ApiV1Form) SetAmendmentType(v string) {
	o.AmendmentType = &v
}

// GetConfDeniedExpired returns the ConfDeniedExpired field value if set, zero value otherwise.
func (o *ApiV1Form) GetConfDeniedExpired() bool {
	if o == nil || IsNil(o.ConfDeniedExpired) {
		var ret bool
		return ret
	}
	return *o.ConfDeniedExpired
}

// GetConfDeniedExpiredOk returns a tuple with the ConfDeniedExpired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1Form) GetConfDeniedExpiredOk() (*bool, bool) {
	if o == nil || IsNil(o.ConfDeniedExpired) {
		return nil, false
	}
	return o.ConfDeniedExpired, true
}

// HasConfDeniedExpired returns a boolean if a field has been set.
func (o *ApiV1Form) HasConfDeniedExpired() bool {
	if o != nil && !IsNil(o.ConfDeniedExpired) {
		return true
	}

	return false
}

// SetConfDeniedExpired gets a reference to the given bool and assigns it to the ConfDeniedExpired field.
func (o *ApiV1Form) SetConfDeniedExpired(v bool) {
	o.ConfDeniedExpired = &v
}

// GetConfDateDeniedExpired returns the ConfDateDeniedExpired field value if set, zero value otherwise.
func (o *ApiV1Form) GetConfDateDeniedExpired() string {
	if o == nil || IsNil(o.ConfDateDeniedExpired) {
		var ret string
		return ret
	}
	return *o.ConfDateDeniedExpired
}

// GetConfDateDeniedExpiredOk returns a tuple with the ConfDateDeniedExpired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1Form) GetConfDateDeniedExpiredOk() (*string, bool) {
	if o == nil || IsNil(o.ConfDateDeniedExpired) {
		return nil, false
	}
	return o.ConfDateDeniedExpired, true
}

// HasConfDateDeniedExpired returns a boolean if a field has been set.
func (o *ApiV1Form) HasConfDateDeniedExpired() bool {
	if o != nil && !IsNil(o.ConfDateDeniedExpired) {
		return true
	}

	return false
}

// SetConfDateDeniedExpired gets a reference to the given string and assigns it to the ConfDateDeniedExpired field.
func (o *ApiV1Form) SetConfDateDeniedExpired(v string) {
	o.ConfDateDeniedExpired = &v
}

// GetAmendmentDateReported returns the AmendmentDateReported field value if set, zero value otherwise.
func (o *ApiV1Form) GetAmendmentDateReported() string {
	if o == nil || IsNil(o.AmendmentDateReported) {
		var ret string
		return ret
	}
	return *o.AmendmentDateReported
}

// GetAmendmentDateReportedOk returns a tuple with the AmendmentDateReported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1Form) GetAmendmentDateReportedOk() (*string, bool) {
	if o == nil || IsNil(o.AmendmentDateReported) {
		return nil, false
	}
	return o.AmendmentDateReported, true
}

// HasAmendmentDateReported returns a boolean if a field has been set.
func (o *ApiV1Form) HasAmendmentDateReported() bool {
	if o != nil && !IsNil(o.AmendmentDateReported) {
		return true
	}

	return false
}

// SetAmendmentDateReported gets a reference to the given string and assigns it to the AmendmentDateReported field.
func (o *ApiV1Form) SetAmendmentDateReported(v string) {
	o.AmendmentDateReported = &v
}

func (o ApiV1Form) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiV1Form) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.AccessionNumber) {
		toSerialize["accession_number"] = o.AccessionNumber
	}
	if !IsNil(o.SubmissionType) {
		toSerialize["submission_type"] = o.SubmissionType
	}
	if o.PublicDocumentCount.IsSet() {
		toSerialize["public_document_count"] = o.PublicDocumentCount.Get()
	}
	if !IsNil(o.PeriodOfReport) {
		toSerialize["period_of_report"] = o.PeriodOfReport
	}
	if !IsNil(o.FiledAsOfDate) {
		toSerialize["filed_as_of_date"] = o.FiledAsOfDate
	}
	if !IsNil(o.DateAsOfChange) {
		toSerialize["date_as_of_change"] = o.DateAsOfChange
	}
	if !IsNil(o.EffectivenessDate) {
		toSerialize["effectiveness_date"] = o.EffectivenessDate
	}
	if !IsNil(o.Cik) {
		toSerialize["cik"] = o.Cik
	}
	if !IsNil(o.CompanyName) {
		toSerialize["company_name"] = o.CompanyName
	}
	if !IsNil(o.IrsNumber) {
		toSerialize["irs_number"] = o.IrsNumber
	}
	if !IsNil(o.StateOfIncorporation) {
		toSerialize["state_of_incorporation"] = o.StateOfIncorporation
	}
	if !IsNil(o.FiscalYearEnd) {
		toSerialize["fiscal_year_end"] = o.FiscalYearEnd
	}
	if !IsNil(o.FormType) {
		toSerialize["form_type"] = o.FormType
	}
	if !IsNil(o.SecAct) {
		toSerialize["sec_act"] = o.SecAct
	}
	if !IsNil(o.SecFileNumber) {
		toSerialize["sec_file_number"] = o.SecFileNumber
	}
	if !IsNil(o.FilmNumber) {
		toSerialize["film_number"] = o.FilmNumber
	}
	if o.BusinessAddress.IsSet() {
		toSerialize["business_address"] = o.BusinessAddress.Get()
	}
	if o.BusinessPhone.IsSet() {
		toSerialize["business_phone"] = o.BusinessPhone.Get()
	}
	if o.TableValueTotal.IsSet() {
		toSerialize["table_value_total"] = o.TableValueTotal.Get()
	}
	if o.TableEntryTotal.IsSet() {
		toSerialize["table_entry_total"] = o.TableEntryTotal.Get()
	}
	if !IsNil(o.IsAmendment) {
		toSerialize["is_amendment"] = o.IsAmendment
	}
	if !IsNil(o.AmendmentType) {
		toSerialize["amendment_type"] = o.AmendmentType
	}
	if !IsNil(o.ConfDeniedExpired) {
		toSerialize["conf_denied_expired"] = o.ConfDeniedExpired
	}
	if !IsNil(o.ConfDateDeniedExpired) {
		toSerialize["conf_date_denied_expired"] = o.ConfDateDeniedExpired
	}
	if !IsNil(o.AmendmentDateReported) {
		toSerialize["amendment_date_reported"] = o.AmendmentDateReported
	}
	return toSerialize, nil
}

type NullableApiV1Form struct {
	value *ApiV1Form
	isSet bool
}

func (v NullableApiV1Form) Get() *ApiV1Form {
	return v.value
}

func (v *NullableApiV1Form) Set(val *ApiV1Form) {
	v.value = val
	v.isSet = true
}

func (v NullableApiV1Form) IsSet() bool {
	return v.isSet
}

func (v *NullableApiV1Form) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiV1Form(val *ApiV1Form) *NullableApiV1Form {
	return &NullableApiV1Form{value: val, isSet: true}
}

func (v NullableApiV1Form) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiV1Form) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


